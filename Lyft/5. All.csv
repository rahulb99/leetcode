Difficulty,Title,Frequency,Acceptance Rate,Link,Topics
MEDIUM,Rotting Oranges,100.0,0.5635831746484984,https://leetcode.com/problems/rotting-oranges,"Array, Breadth-First Search, Matrix"
MEDIUM,Time Based Key-Value Store,93.8,0.49294801402067745,https://leetcode.com/problems/time-based-key-value-store,"Hash Table, String, Binary Search, Design"
HARD,Read N Characters Given read4 II - Call Multiple Times,93.0,0.42842554335046523,https://leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times,"Array, Simulation, Interactive"
HARD,Minimum Window Substring,91.3,0.45098632145306533,https://leetcode.com/problems/minimum-window-substring,"Hash Table, String, Sliding Window"
HARD,Max Stack,80.8,0.45479753885975727,https://leetcode.com/problems/max-stack,"Linked List, Stack, Design, Doubly-Linked List, Ordered Set"
MEDIUM,Convert Sorted List to Binary Search Tree,79.2,0.6426054063634044,https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree,"Linked List, Divide and Conquer, Tree, Binary Search Tree, Binary Tree"
HARD,Smallest Range Covering Elements from K Lists,75.5,0.6973578317475564,https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists,"Array, Hash Table, Greedy, Sliding Window, Sorting, Heap (Priority Queue)"
MEDIUM,Check Completeness of a Binary Tree,75.5,0.5824627116880573,https://leetcode.com/problems/check-completeness-of-a-binary-tree,"Tree, Breadth-First Search, Binary Tree"
MEDIUM,String Compression,75.5,0.5782719665472218,https://leetcode.com/problems/string-compression,"Two Pointers, String"
MEDIUM,Car Pooling,75.5,0.5600885764888672,https://leetcode.com/problems/car-pooling,"Array, Sorting, Heap (Priority Queue), Simulation, Prefix Sum"
MEDIUM,Range Sum Query 2D - Immutable,71.1,0.5631234388739932,https://leetcode.com/problems/range-sum-query-2d-immutable,"Array, Design, Matrix, Prefix Sum"
MEDIUM,Min Stack,65.3,0.5623422116778206,https://leetcode.com/problems/min-stack,"Stack, Design"
HARD,Word Ladder II,65.3,0.27154757193849205,https://leetcode.com/problems/word-ladder-ii,"Hash Table, String, Backtracking, Breadth-First Search"
MEDIUM,Longest Consecutive Sequence,61.7,0.4707114352506025,https://leetcode.com/problems/longest-consecutive-sequence,"Array, Hash Table, Union Find"
MEDIUM,Water and Jug Problem,57.2,0.42893860133120076,https://leetcode.com/problems/water-and-jug-problem,"Math, Depth-First Search, Breadth-First Search"
MEDIUM,Longest Substring Without Repeating Characters,57.2,0.3671606911160785,https://leetcode.com/problems/longest-substring-without-repeating-characters,"Hash Table, String, Sliding Window"
MEDIUM,Decode Ways,57.2,0.3638101021197469,https://leetcode.com/problems/decode-ways,"String, Dynamic Programming"
MEDIUM,Asteroid Collision,51.5,0.4532788035999576,https://leetcode.com/problems/asteroid-collision,"Array, Stack, Simulation"
MEDIUM,Meeting Rooms II,51.5,0.5207961332045202,https://leetcode.com/problems/meeting-rooms-ii,"Array, Two Pointers, Greedy, Sorting, Heap (Priority Queue), Prefix Sum"
MEDIUM,Implement Trie (Prefix Tree),51.5,0.6770012182141728,https://leetcode.com/problems/implement-trie-prefix-tree,"Hash Table, String, Design, Trie"
HARD,Maximum Candies You Can Get from Boxes,51.5,0.5749125139028294,https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes,"Array, Breadth-First Search, Graph"
MEDIUM,Process Tasks Using Servers,43.4,0.4095165572454671,https://leetcode.com/problems/process-tasks-using-servers,"Array, Heap (Priority Queue)"
HARD,Find Minimum Time to Finish All Jobs,43.4,0.43165814729814317,https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs,"Array, Dynamic Programming, Backtracking, Bit Manipulation, Bitmask"
MEDIUM,Coordinate With Maximum Network Quality,43.4,0.3831512557720464,https://leetcode.com/problems/coordinate-with-maximum-network-quality,"Array, Enumeration"
MEDIUM,Product of Array Except Self,43.4,0.6762118634156647,https://leetcode.com/problems/product-of-array-except-self,"Array, Prefix Sum"
MEDIUM,Sort List,43.4,0.6144023419186813,https://leetcode.com/problems/sort-list,"Linked List, Two Pointers, Divide and Conquer, Sorting, Merge Sort"
