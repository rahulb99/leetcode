Difficulty,Title,Frequency,Acceptance Rate,Link,Topics
MEDIUM,Longest Substring Without Repeating Characters,100.0,0.36716098597689856,https://leetcode.com/problems/longest-substring-without-repeating-characters,"Hash Table, String, Sliding Window"
EASY,Valid Parentheses,100.0,0.42160033448722606,https://leetcode.com/problems/valid-parentheses,"String, Stack"
EASY,Two Sum,97.8,0.5554662305765014,https://leetcode.com/problems/two-sum,"Array, Hash Table"
MEDIUM,Group Anagrams,95.4,0.707241681583882,https://leetcode.com/problems/group-anagrams,"Array, Hash Table, String, Sorting"
MEDIUM,Minimum Operations to Make a Uni-Value Grid,95.4,0.6745645491803277,https://leetcode.com/problems/minimum-operations-to-make-a-uni-value-grid,"Array, Math, Sorting, Matrix"
MEDIUM,Longest Palindromic Substring,86.4,0.3564854305719919,https://leetcode.com/problems/longest-palindromic-substring,"Two Pointers, String, Dynamic Programming"
EASY,Longest Common Prefix,82.6,0.4526924624776697,https://leetcode.com/problems/longest-common-prefix,"String, Trie"
EASY,Valid Palindrome,82.6,0.5066491147848017,https://leetcode.com/problems/valid-palindrome,"Two Pointers, String"
EASY,Valid Anagram,78.0,0.6647094207013634,https://leetcode.com/problems/valid-anagram,"Hash Table, String, Sorting"
EASY,Merge Sorted Array,78.0,0.5267886259439482,https://leetcode.com/problems/merge-sorted-array,"Array, Two Pointers, Sorting"
EASY,Best Time to Buy and Sell Stock,78.0,0.5506578276121635,https://leetcode.com/problems/best-time-to-buy-and-sell-stock,"Array, Dynamic Programming"
EASY,Merge Two Sorted Lists,72.4,0.6665313573811451,https://leetcode.com/problems/merge-two-sorted-lists,"Linked List, Recursion"
HARD,Trapping Rain Water,72.4,0.6481250853208133,https://leetcode.com/problems/trapping-rain-water,"Array, Two Pointers, Dynamic Programming, Stack, Monotonic Stack"
EASY,Isomorphic Strings,65.2,0.46684107757514715,https://leetcode.com/problems/isomorphic-strings,"Hash Table, String"
EASY,Reverse String,65.2,0.7965214897499976,https://leetcode.com/problems/reverse-string,"Two Pointers, String"
MEDIUM,"Pow(x, n)",65.2,0.3685491163809463,https://leetcode.com/problems/powx-n,"Math, Recursion"
MEDIUM,Gas Station,65.2,0.46224277192194796,https://leetcode.com/problems/gas-station,"Array, Greedy"
EASY,Palindrome Number,65.2,0.5903912432039777,https://leetcode.com/problems/palindrome-number,Math
MEDIUM,Maximum Difference Between Node and Ancestor,65.2,0.7804473520030227,https://leetcode.com/problems/maximum-difference-between-node-and-ancestor,"Tree, Depth-First Search, Binary Tree"
EASY,Running Sum of 1d Array,55.1,0.869670555073228,https://leetcode.com/problems/running-sum-of-1d-array,"Array, Prefix Sum"
MEDIUM,Reverse Integer,55.1,0.3013865556471125,https://leetcode.com/problems/reverse-integer,Math
MEDIUM,Two Sum II - Input Array Is Sorted,55.1,0.632090501918342,https://leetcode.com/problems/two-sum-ii-input-array-is-sorted,"Array, Two Pointers, Binary Search"
MEDIUM,Merge Intervals,55.1,0.49193487450468554,https://leetcode.com/problems/merge-intervals,"Array, Sorting"
EASY,First Unique Character in a String,55.1,0.6352036466871926,https://leetcode.com/problems/first-unique-character-in-a-string,"Hash Table, String, Queue, Counting"
HARD,First Missing Positive,55.1,0.40934887866112324,https://leetcode.com/problems/first-missing-positive,"Array, Hash Table"
EASY,Duplicate Emails,55.1,0.7231081851784221,https://leetcode.com/problems/duplicate-emails,Database
MEDIUM,Rotate Array,55.1,0.4280579611744751,https://leetcode.com/problems/rotate-array,"Array, Math, Two Pointers"
MEDIUM,Reverse Linked List II,55.1,0.49417486134548466,https://leetcode.com/problems/reverse-linked-list-ii,Linked List
EASY,Binary Search,55.1,0.5939920955537061,https://leetcode.com/problems/binary-search,"Array, Binary Search"
MEDIUM,String Compression,55.1,0.5782731614266229,https://leetcode.com/problems/string-compression,"Two Pointers, String"
MEDIUM,Longest Consecutive Sequence,55.1,0.47071132344703015,https://leetcode.com/problems/longest-consecutive-sequence,"Array, Hash Table, Union Find"
MEDIUM,Coin Change,55.1,0.46233645824883285,https://leetcode.com/problems/coin-change,"Array, Dynamic Programming, Breadth-First Search"
MEDIUM,Kth Largest Element in an Array,55.1,0.67833653101061,https://leetcode.com/problems/kth-largest-element-in-an-array,"Array, Divide and Conquer, Sorting, Heap (Priority Queue), Quickselect"
MEDIUM,Partition Equal Subset Sum,55.1,0.48272767913267456,https://leetcode.com/problems/partition-equal-subset-sum,"Array, Dynamic Programming"
MEDIUM,Managers with at Least 5 Direct Reports,55.1,0.48960022895113214,https://leetcode.com/problems/managers-with-at-least-5-direct-reports,Database
MEDIUM,House Robber,55.1,0.521893169566133,https://leetcode.com/problems/house-robber,"Array, Dynamic Programming"
EASY,Remove Duplicates from Sorted Array,55.1,0.6004900846121348,https://leetcode.com/problems/remove-duplicates-from-sorted-array,"Array, Two Pointers"
MEDIUM,Add Two Numbers,55.1,0.45941554738090074,https://leetcode.com/problems/add-two-numbers,"Linked List, Math, Recursion"
MEDIUM,Ugly Number II,55.1,0.49216700026168936,https://leetcode.com/problems/ugly-number-ii,"Hash Table, Math, Dynamic Programming, Heap (Priority Queue)"
EASY,To Be Or Not To Be,55.1,0.6291847519637026,https://leetcode.com/problems/to-be-or-not-to-be,
MEDIUM,Asteroid Collision,55.1,0.45328069965512463,https://leetcode.com/problems/asteroid-collision,"Array, Stack, Simulation"
EASY,Contains Duplicate,55.1,0.630785749184727,https://leetcode.com/problems/contains-duplicate,"Array, Hash Table, Sorting"
EASY,Linked List Cycle,55.1,0.5235438210804636,https://leetcode.com/problems/linked-list-cycle,"Hash Table, Linked List, Two Pointers"
HARD,Maximal Rectangle,55.1,0.5335163198937779,https://leetcode.com/problems/maximal-rectangle,"Array, Dynamic Programming, Stack, Matrix, Monotonic Stack"
MEDIUM,3Sum,55.1,0.368404311460932,https://leetcode.com/problems/3sum,"Array, Two Pointers, Sorting"
MEDIUM,Top K Frequent Elements,55.1,0.6438812878369162,https://leetcode.com/problems/top-k-frequent-elements,"Array, Hash Table, Divide and Conquer, Sorting, Heap (Priority Queue), Bucket Sort, Counting, Quickselect"
