Difficulty,Title,Frequency,Acceptance Rate,Link,Topics
HARD,String Transformation,100.0,0.3060878412752247,https://leetcode.com/problems/string-transformation,"Math, String, Dynamic Programming, String Matching"
EASY,Happy Number,97.7,0.5763512488493718,https://leetcode.com/problems/happy-number,"Hash Table, Math, Two Pointers"
HARD,Trapping Rain Water,92.4,0.6439794890621786,https://leetcode.com/problems/trapping-rain-water,"Array, Two Pointers, Dynamic Programming, Stack, Monotonic Stack"
HARD,Number of Ways to Form a Target String Given a Dictionary,89.2,0.5724343891402714,https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary,"Array, String, Dynamic Programming"
HARD,Painting the Walls,85.5,0.5030105920098449,https://leetcode.com/problems/painting-the-walls,"Array, Dynamic Programming"
EASY,Count Vowel Substrings of a String,85.5,0.7045388731507711,https://leetcode.com/problems/count-vowel-substrings-of-a-string,"Hash Table, String"
HARD,Maximum Profit in Job Scheduling,85.5,0.5433769640000496,https://leetcode.com/problems/maximum-profit-in-job-scheduling,"Array, Binary Search, Dynamic Programming, Sorting"
HARD,Design In-Memory File System,75.9,0.48074949083503055,https://leetcode.com/problems/design-in-memory-file-system,"Hash Table, String, Design, Trie, Sorting"
MEDIUM,Course Schedule II,69.0,0.5273970883940512,https://leetcode.com/problems/course-schedule-ii,"Depth-First Search, Breadth-First Search, Graph, Topological Sort"
HARD,Minimum Window Substring,69.0,0.44765882609195506,https://leetcode.com/problems/minimum-window-substring,"Hash Table, String, Sliding Window"
HARD,Regular Expression Matching,69.0,0.29006033421448,https://leetcode.com/problems/regular-expression-matching,"String, Dynamic Programming, Recursion"
MEDIUM,Course Schedule,69.0,0.4857204508654287,https://leetcode.com/problems/course-schedule,"Depth-First Search, Breadth-First Search, Graph, Topological Sort"
MEDIUM,Construct Binary Tree from Preorder and Inorder Traversal,59.4,0.6623372149868421,https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal,"Array, Hash Table, Divide and Conquer, Tree, Binary Tree"
MEDIUM,Time Based Key-Value Store,59.4,0.4936939690931596,https://leetcode.com/problems/time-based-key-value-store,"Hash Table, String, Binary Search, Design"
MEDIUM,Container With Most Water,59.4,0.572680837094448,https://leetcode.com/problems/container-with-most-water,"Array, Two Pointers, Greedy"
MEDIUM,Most Profitable Path in a Tree,59.4,0.6791980974575984,https://leetcode.com/problems/most-profitable-path-in-a-tree,"Array, Tree, Depth-First Search, Breadth-First Search, Graph"
HARD,Integer to English Words,59.4,0.3426276110524168,https://leetcode.com/problems/integer-to-english-words,"Math, String, Recursion"
MEDIUM,Copy List with Random Pointer,59.4,0.5965904885969253,https://leetcode.com/problems/copy-list-with-random-pointer,"Hash Table, Linked List"
MEDIUM,Find All Anagrams in a String,59.4,0.5188099645861535,https://leetcode.com/problems/find-all-anagrams-in-a-string,"Hash Table, String, Sliding Window"
MEDIUM,Maximize Distance to Closest Person,59.4,0.48738703753934537,https://leetcode.com/problems/maximize-distance-to-closest-person,Array
HARD,Word Search II,59.4,0.370529068061151,https://leetcode.com/problems/word-search-ii,"Array, String, Backtracking, Trie, Matrix"
MEDIUM,Longest Univalue Path,59.4,0.42363049797169966,https://leetcode.com/problems/longest-univalue-path,"Tree, Depth-First Search, Binary Tree"
HARD,Parallel Courses III,59.4,0.6684714029990902,https://leetcode.com/problems/parallel-courses-iii,"Array, Dynamic Programming, Graph, Topological Sort"
MEDIUM,Maximum Number of Upgradable Servers,59.4,0.39750141964792735,https://leetcode.com/problems/maximum-number-of-upgradable-servers,"Array, Math, Binary Search"
EASY,Calculate Amount Paid in Taxes,59.4,0.669826530916908,https://leetcode.com/problems/calculate-amount-paid-in-taxes,"Array, Simulation"
MEDIUM,Throne Inheritance,59.4,0.6642577246739898,https://leetcode.com/problems/throne-inheritance,"Hash Table, Tree, Depth-First Search, Design"
