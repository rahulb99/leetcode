Difficulty,Title,Frequency,Acceptance Rate,Link,Topics
MEDIUM,LRU Cache,100.0,0.4471760822101147,https://leetcode.com/problems/lru-cache,"Hash Table, Linked List, Design, Doubly-Linked List"
EASY,Two Sum,89.8,0.5533846457209597,https://leetcode.com/problems/two-sum,"Array, Hash Table"
MEDIUM,Rotate Array,85.0,0.4265254283165619,https://leetcode.com/problems/rotate-array,"Array, Math, Two Pointers"
MEDIUM,Top K Frequent Elements,83.2,0.6425177224842545,https://leetcode.com/problems/top-k-frequent-elements,"Array, Hash Table, Divide and Conquer, Sorting, Heap (Priority Queue), Bucket Sort, Counting, Quickselect"
MEDIUM,Word Break,83.2,0.4802055556207004,https://leetcode.com/problems/word-break,"Array, Hash Table, String, Dynamic Programming, Trie, Memoization"
MEDIUM,Valid Sudoku,76.6,0.6189170500042798,https://leetcode.com/problems/valid-sudoku,"Array, Hash Table, Matrix"
MEDIUM,Number of Islands,76.6,0.618624259821997,https://leetcode.com/problems/number-of-islands,"Array, Depth-First Search, Breadth-First Search, Union Find, Matrix"
MEDIUM,Group Anagrams,76.6,0.705668117287525,https://leetcode.com/problems/group-anagrams,"Array, Hash Table, String, Sorting"
EASY,Valid Parentheses,76.6,0.4202350081361501,https://leetcode.com/problems/valid-parentheses,"String, Stack"
MEDIUM,Design Circular Queue,73.9,0.5246722118428855,https://leetcode.com/problems/design-circular-queue,"Array, Linked List, Design, Queue"
EASY,Longest Common Prefix,73.9,0.4510200568709978,https://leetcode.com/problems/longest-common-prefix,"String, Trie"
EASY,First Unique Character in a String,70.9,0.6339017375426109,https://leetcode.com/problems/first-unique-character-in-a-string,"Hash Table, String, Queue, Counting"
EASY,Merge Sorted Array,67.4,0.5249697585188008,https://leetcode.com/problems/merge-sorted-array,"Array, Two Pointers, Sorting"
EASY,Valid Palindrome,67.4,0.5045355508431983,https://leetcode.com/problems/valid-palindrome,"Two Pointers, String"
EASY,Move Zeroes,67.4,0.6264105412519556,https://leetcode.com/problems/move-zeroes,"Array, Two Pointers"
MEDIUM,Longest Substring Without Repeating Characters,67.4,0.36543805092402626,https://leetcode.com/problems/longest-substring-without-repeating-characters,"Hash Table, String, Sliding Window"
MEDIUM,Spiral Matrix,67.4,0.5330311974713883,https://leetcode.com/problems/spiral-matrix,"Array, Matrix, Simulation"
MEDIUM,Subarray Sum Equals K,67.4,0.451178943013667,https://leetcode.com/problems/subarray-sum-equals-k,"Array, Hash Table, Prefix Sum"
MEDIUM,Kth Largest Element in an Array,67.4,0.6774050203314844,https://leetcode.com/problems/kth-largest-element-in-an-array,"Array, Divide and Conquer, Sorting, Heap (Priority Queue), Quickselect"
MEDIUM,Min Stack,63.2,0.5611001972960041,https://leetcode.com/problems/min-stack,"Stack, Design"
HARD,Word Ladder,63.2,0.4218681694362876,https://leetcode.com/problems/word-ladder,"Hash Table, String, Breadth-First Search"
MEDIUM,Course Schedule,63.2,0.48714189861858315,https://leetcode.com/problems/course-schedule,"Depth-First Search, Breadth-First Search, Graph, Topological Sort"
MEDIUM,Implement Trie (Prefix Tree),63.2,0.6767989036299835,https://leetcode.com/problems/implement-trie-prefix-tree,"Hash Table, String, Design, Trie"
EASY,Best Time to Buy and Sell Stock,63.2,0.5492507527580783,https://leetcode.com/problems/best-time-to-buy-and-sell-stock,"Array, Dynamic Programming"
MEDIUM,Generate Parentheses,58.1,0.7675031663032121,https://leetcode.com/problems/generate-parentheses,"String, Dynamic Programming, Backtracking"
EASY,Fibonacci Number,58.1,0.7268280659267742,https://leetcode.com/problems/fibonacci-number,"Math, Dynamic Programming, Recursion, Memoization"
EASY,Reverse String,58.1,0.7957719359265678,https://leetcode.com/problems/reverse-string,"Two Pointers, String"
HARD,Integer to English Words,58.1,0.34274242670672167,https://leetcode.com/problems/integer-to-english-words,"Math, String, Recursion"
HARD,Serialize and Deserialize Binary Tree,58.1,0.5854435048693585,https://leetcode.com/problems/serialize-and-deserialize-binary-tree,"String, Tree, Depth-First Search, Breadth-First Search, Design, Binary Tree"
MEDIUM,Find First and Last Position of Element in Sorted Array,58.1,0.4638606950794118,https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array,"Array, Binary Search"
MEDIUM,Find K Closest Elements,58.1,0.48457410916585286,https://leetcode.com/problems/find-k-closest-elements,"Array, Two Pointers, Binary Search, Sliding Window, Sorting, Heap (Priority Queue)"
MEDIUM,Design Tic-Tac-Toe,58.1,0.5850248686529532,https://leetcode.com/problems/design-tic-tac-toe,"Array, Hash Table, Design, Matrix, Simulation"
MEDIUM,Longest Palindromic Substring,58.1,0.354909566127792,https://leetcode.com/problems/longest-palindromic-substring,"Two Pointers, String, Dynamic Programming"
MEDIUM,Merge Intervals,58.1,0.4902747949359224,https://leetcode.com/problems/merge-intervals,"Array, Sorting"
MEDIUM,Reverse Words in a String,58.1,0.5080402395080035,https://leetcode.com/problems/reverse-words-in-a-string,"Two Pointers, String"
MEDIUM,Robot Bounded In Circle,51.6,0.5616571612195245,https://leetcode.com/problems/robot-bounded-in-circle,"Math, String, Simulation"
HARD,Employee Free Time,51.6,0.7254861912796376,https://leetcode.com/problems/employee-free-time,"Array, Sorting, Heap (Priority Queue)"
MEDIUM,Add Two Numbers,51.6,0.45719830757325,https://leetcode.com/problems/add-two-numbers,"Linked List, Math, Recursion"
HARD,Merge k Sorted Lists,51.6,0.5615760481036848,https://leetcode.com/problems/merge-k-sorted-lists,"Linked List, Divide and Conquer, Heap (Priority Queue), Merge Sort"
HARD,Find Median from Data Stream,51.6,0.5311627841019104,https://leetcode.com/problems/find-median-from-data-stream,"Two Pointers, Design, Sorting, Heap (Priority Queue), Data Stream"
HARD,Trapping Rain Water,51.6,0.6456470795758559,https://leetcode.com/problems/trapping-rain-water,"Array, Two Pointers, Dynamic Programming, Stack, Monotonic Stack"
EASY,Reverse Bits,51.6,0.6253211617319095,https://leetcode.com/problems/reverse-bits,"Divide and Conquer, Bit Manipulation"
EASY,Reverse Linked List,51.6,0.7884950649485056,https://leetcode.com/problems/reverse-linked-list,"Linked List, Recursion"
MEDIUM,Course Schedule II,51.6,0.5291120803508438,https://leetcode.com/problems/course-schedule-ii,"Depth-First Search, Breadth-First Search, Graph, Topological Sort"
MEDIUM,Kth Smallest Element in a Sorted Matrix,51.6,0.6335088230567895,https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix,"Array, Binary Search, Sorting, Heap (Priority Queue), Matrix"
MEDIUM,String to Integer (atoi),51.6,0.18892275645793563,https://leetcode.com/problems/string-to-integer-atoi,String
MEDIUM,3Sum,51.6,0.36665402927187524,https://leetcode.com/problems/3sum,"Array, Two Pointers, Sorting"
MEDIUM,String Compression,51.6,0.5758847368813674,https://leetcode.com/problems/string-compression,"Two Pointers, String"
EASY,Design HashMap,51.6,0.6570211105943075,https://leetcode.com/problems/design-hashmap,"Array, Hash Table, Linked List, Design, Hash Function"
HARD,Text Justification,51.6,0.4749298494130809,https://leetcode.com/problems/text-justification,"Array, String, Simulation"
MEDIUM,Decode String,51.6,0.608408150928499,https://leetcode.com/problems/decode-string,"String, Stack, Recursion"
MEDIUM,Meeting Rooms II,51.6,0.5200579926786013,https://leetcode.com/problems/meeting-rooms-ii,"Array, Two Pointers, Greedy, Sorting, Heap (Priority Queue), Prefix Sum"
EASY,Valid Anagram,51.6,0.6633017558028301,https://leetcode.com/problems/valid-anagram,"Hash Table, String, Sorting"
MEDIUM,Two Sum II - Input Array Is Sorted,51.6,0.6305950698333384,https://leetcode.com/problems/two-sum-ii-input-array-is-sorted,"Array, Two Pointers, Binary Search"
MEDIUM,Best Time to Buy and Sell Stock with Transaction Fee,42.4,0.7008723840251796,https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee,"Array, Dynamic Programming, Greedy"
MEDIUM,Insert Delete GetRandom O(1),42.4,0.5496803983720336,https://leetcode.com/problems/insert-delete-getrandom-o1,"Array, Hash Table, Math, Design, Randomized"
EASY,Diameter of Binary Tree,42.4,0.6304800786534316,https://leetcode.com/problems/diameter-of-binary-tree,"Tree, Depth-First Search, Binary Tree"
HARD,The Skyline Problem,42.4,0.4375122735105144,https://leetcode.com/problems/the-skyline-problem,"Array, Divide and Conquer, Binary Indexed Tree, Segment Tree, Line Sweep, Heap (Priority Queue), Ordered Set"
MEDIUM,Gas Station,42.4,0.4609957112940268,https://leetcode.com/problems/gas-station,"Array, Greedy"
HARD,Guess the Word,42.4,0.378997812523364,https://leetcode.com/problems/guess-the-word,"Array, Math, String, Interactive, Game Theory"
MEDIUM,Coin Change,42.4,0.46046349941115894,https://leetcode.com/problems/coin-change,"Array, Dynamic Programming, Breadth-First Search"
MEDIUM,Find Largest Value in Each Tree Row,42.4,0.6627959022676283,https://leetcode.com/problems/find-largest-value-in-each-tree-row,"Tree, Depth-First Search, Breadth-First Search, Binary Tree"
EASY,Best Poker Hand,42.4,0.6105991079576858,https://leetcode.com/problems/best-poker-hand,"Array, Hash Table, Counting"
EASY,Can Place Flowers,42.4,0.28839094038916113,https://leetcode.com/problems/can-place-flowers,"Array, Greedy"
MEDIUM,Validate IP Address,42.4,0.2772505809614533,https://leetcode.com/problems/validate-ip-address,String
MEDIUM,Compare Version Numbers,42.4,0.42083774631454324,https://leetcode.com/problems/compare-version-numbers,"Two Pointers, String"
MEDIUM,Evaluate Reverse Polish Notation,42.4,0.5438042738642992,https://leetcode.com/problems/evaluate-reverse-polish-notation,"Array, Math, Stack"
MEDIUM,Permutations,42.4,0.8033205376048009,https://leetcode.com/problems/permutations,"Array, Backtracking"
MEDIUM,Random Pick with Weight,42.4,0.4832717981537822,https://leetcode.com/problems/random-pick-with-weight,"Array, Math, Binary Search, Prefix Sum, Randomized"
MEDIUM,Flatten Nested List Iterator,42.4,0.6524340921911087,https://leetcode.com/problems/flatten-nested-list-iterator,"Stack, Tree, Depth-First Search, Design, Queue, Iterator"
MEDIUM,Design Hit Counter,42.4,0.6907138240466564,https://leetcode.com/problems/design-hit-counter,"Array, Binary Search, Design, Queue, Data Stream"
EASY,Roman to Integer,42.4,0.6441533694037633,https://leetcode.com/problems/roman-to-integer,"Hash Table, Math, String"
MEDIUM,Cheapest Flights Within K Stops,42.4,0.40164583797941106,https://leetcode.com/problems/cheapest-flights-within-k-stops,"Dynamic Programming, Depth-First Search, Breadth-First Search, Graph, Heap (Priority Queue), Shortest Path"
EASY,Intersection of Two Linked Lists,42.4,0.6055748149832032,https://leetcode.com/problems/intersection-of-two-linked-lists,"Hash Table, Linked List, Two Pointers"
MEDIUM,String Compression III,42.4,0.6802226717024361,https://leetcode.com/problems/string-compression-iii,String
MEDIUM,Basic Calculator II,42.4,0.45454406914835066,https://leetcode.com/problems/basic-calculator-ii,"Math, String, Stack"
MEDIUM,Next Greater Element II,42.4,0.6578702195189651,https://leetcode.com/problems/next-greater-element-ii,"Array, Stack, Monotonic Stack"
HARD,Sliding Window Maximum,42.4,0.4736676999472209,https://leetcode.com/problems/sliding-window-maximum,"Array, Queue, Sliding Window, Heap (Priority Queue), Monotonic Queue"
HARD,Regular Expression Matching,42.4,0.2906628579648791,https://leetcode.com/problems/regular-expression-matching,"String, Dynamic Programming, Recursion"
MEDIUM,Remove Nth Node From End of List,42.4,0.48405788559307716,https://leetcode.com/problems/remove-nth-node-from-end-of-list,"Linked List, Two Pointers"
MEDIUM,Lowest Common Ancestor of a Binary Tree,42.4,0.6606724913245546,https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree,"Tree, Depth-First Search, Binary Tree"
MEDIUM,Product of Array Except Self,42.4,0.6750765269170728,https://leetcode.com/problems/product-of-array-except-self,"Array, Prefix Sum"
MEDIUM,Search in Rotated Sorted Array,42.4,0.4250773934254519,https://leetcode.com/problems/search-in-rotated-sorted-array,"Array, Binary Search"
EASY,Same Tree,42.4,0.6464969548471422,https://leetcode.com/problems/same-tree,"Tree, Depth-First Search, Breadth-First Search, Binary Tree"
